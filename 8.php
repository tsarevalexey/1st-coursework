<?php



session_start();

include ('mysql.php');

	include('authentification.php');

		$page_num=8;

echo '

<!--  -->
<!DOCTYP html>
<html>
	<head>
		<title></title>
		<meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
		<link rel="stylesheet" href="style.css" type="text/css">		
		</head>

<body>

	<header id="page_header">
		<nav>			
				<div id="oglavlenie">
				
					<ul id="ul1">
					
';

include('oglavlenie.php');

echo '
					</ul>
				
				</div>	
				<div id="zakladki">					
					<ul id="ul1">
					
';

include('zakladky.php');

echo '
					</ul>						
				</div>	
				
				<div id="reg">
					<div>
					
';

include('auth.php');

echo '
					</div>
				</div>
				
				<div id="menu">
				
';

include('menu.php');

echo '

				</div>
		</nav>
	</header>

	<section id="content">
		<div id="content1">
			<div id="content2">	
<p id="z">
Кортежи</p><br />

<i></i><br />

<p>
Списки и строки имеют много общего, например, для них можно получить элемент по индексу или применить операцию среза. Это два примера последовательностей. Еще одним встроенным типом последовательностей является кортеж (tuple).
Кортеж состоит из набора значений, разделенных запятой, например:
</p><br />

<p id="code">
>>> t = 12345, 54321, "hello!"<br />
>>> t[0]<br />
12345 >>> t<br />
(12345, 54321, "hello!")<br />
>>> # Кортежи могут быть вложенными:<br />
u = t, (1, 2, 3, 4, 5)<br />
>>> u<br />
((12345, 54321, "hello!"), (1, 2, 3, 4, 5))<br />
</p><br />

<p>
Как Вы заметили, при выводе кортежи всегда заключаются в круглые скобки, для того, чтобы вложенные кортежи воспринимались корректно. Вводить их можно как в скобках, так и без них, хотя в некоторых случаях скобки необходимы (если кортеж является частью более сложного выражения).
Кортежи имеют множество применений: пара координат (x, y), запись в базе дан­ных и т. д. Кортежи, как и строки, не допускают изменений: нельзя присвоить значение
элементу кортежа (тем не менее, Вы можете имитировать такую операцию с помощью срезов и последующего объединения).
Для того, чтобы сконструировать пустые или содержащие один элемент кортежи, приходится идти на синтаксические ухищрения. Пустой кортеж создается с помощью пустой пары скобок, кортеж с одним элементом — с помощью значения и следующей за ним запятой (не достаточно заключить значение в скобки). Несколько неприятно, но эффективно. Например:
</p><br />

<p id="code">
>>> empty = ()<br />
>>> # обратите внимание на завершающую запятую ... singleton = "hello",<br />
>>> len(empty)<br />
0<br />
>>> empty ()<br />
>>> len(singleton)<br />
1<br />
>>> singleton ("hello",)<br />
</p><br />

<p>
Инструкция t = 12345, 54321, "hello!" — пример упаковки в кортеж: значения 12345, 54321 и "hello!" упаковываются вместе в один кортеж. Также возможна обратная операция — распаковки кортежа:
</p><br />

<p id="code">
>>> x, y, z = t<br />
</p><br />

<p>
Распаковка кортежа требует, чтобы слева стояло столько переменных, сколько эле­ментов в кортеже. Следует заметить, что множественное присваивание является всего лишь комбинацией упаковки и распаковки кортежа. Иногда может оказаться полезной распаковка списка:
</p><br />

<p id="code">
>>> a = ["spam", "eggs", 100, 1234]<br />
>>> a1, a2, a3, a4 = a<br />
</p><br />

<p>
Как мы уже говорили, кортежи, как и строки, не допускают изменений. Однако, в отличие от строк, кортежи могут содержать объекты, которые можно изменить с помощью методов:
</p><br />

<p id="code">
>>> t = 1, ["foo", "bar"]<br />
>>> t<br />
(1, ["foo", "bar"])<br />
>>> t[1] = []	# Ошибка<br />
Traceback (innermost last):<br />
File "<stdin>", line 1, in ?<br />
TypeError: object doesn"t support item assignment<br />
>>> t[1].append("baz") # Правильно <br />
>>> t<br />
(1, ["foo", "bar", "baz"])<br />
</p><br />




	
					
			</div>
		</div>
	</section>

	<footer id="page_footer">
		<hr color="CFDBF5">
		<a href="http://vk.com/id36162788">Царев А.</a> 2013
	</footer>

</body>

</html>

';

?>